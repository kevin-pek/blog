---
import { type CollectionEntry, getCollection, getEntry } from "astro:content"
import Blog from "@/layouts/Blog.astro"
import Pagination from "@/components/blog/Pagination.astro"

export async function getStaticPaths() {
  const posts = (await getCollection("blog"))
    .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  return posts.map((post) => ({
    params: { slug: post.slug },
  }))
}

type Props = CollectionEntry<"blog">

const { slug } = Astro.params

const posts = (await getCollection("blog"))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
const currentIndex = posts.findIndex(post => post.slug === slug)

const prevIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : null
const nextIndex = currentIndex + 1 < posts.length ? currentIndex + 1 : null

const prev = prevIndex !== null ? {
  url: `/${posts[prevIndex].slug}`,
  title: posts[prevIndex].data.title,
} : null

const next = nextIndex !== null ? {
  url: `/${posts[nextIndex].slug}`,
  title: posts[nextIndex].data.title,
} : null

const post = await getEntry({
  collection: "blog",
  slug: slug,
})
if (!post) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  })
}
const { Content } = await post.render()
---

<Blog {...post.data}>
  <Content />
  <Pagination class="" nextUrl={next?.url} prevUrl={prev?.url} nextText={next?.title} prevText={prev?.title} />
</Blog>
